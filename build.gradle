plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '2.8'
    id 'jacoco'
}

group = 'dev.iakunin'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    dataDog
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.1'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core:4.8.0'
    implementation 'com.vladmihalcea:hibernate-types-52:2.14.0'
    implementation 'com.fasterxml.jackson.module:jackson-modules-java8:2.13.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.2'

    implementation 'de.siegmar:logback-gelf:4.0.2'
    implementation 'org.cactoos:cactoos:0.50'
    implementation 'io.vavr:vavr:0.10.4'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-jackson:11.8'

    implementation 'org.kohsuke:github-api:1.303'
    implementation 'net.dean.jraw:JRAW:1.1.0'

    implementation 'io.sentry:sentry-logback:5.6.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation group: 'com.github.database-rider', name: 'rider-spring', version: '1.32.3', {
        exclude group: 'org.slf4j'
    }
    testImplementation 'org.testcontainers:postgresql:1.16.3'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'

    dataDog 'com.datadoghq:dd-java-agent:0.95.1'
}

springBoot {
    buildInfo {
        properties {
            version = version
        }
    }
}

test {
    useJUnitPlatform()
    failFast = true
    maxParallelForks = 2
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'iakunin_codexia-bot'
        property 'sonar.organization', 'iakunin'
        property 'sonar.host.url', 'https://sonarcloud.io'
        if (project.hasProperty('pullRequestKey') && project.property('pullRequestKey')) {
            property 'sonar.pullrequest.key', project.property('pullRequestKey')
        }
        if (!System.getenv('SONAR_TOKEN')) {
            sonarqube.skipProject = true
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

test.finalizedBy jacocoTestReport

task copyDataDog(type: Copy) {
    from configurations.dataDog
    into "${project.buildDir}/libs"
}

assemble.dependsOn copyDataDog
