version: 2.1
orbs:
    gcr: circleci/gcp-gcr@0.6.1
    gke: circleci/gcp-gke@1.0.3
jobs:
    pdd:
        docker:
            -   image: iakunin/pdd:0.20.5
        steps:
            - checkout
            -   run:
                    name: validate pdd
                    command: pdd && echo OK
    build-jar:
        machine:
            image: ubuntu-1604:201903-01
        steps:
            - checkout
            -   run: env
            -   run:
                    name: Workaround for SonarCloud merge check
                    # For more info see:
                    # https://bit.ly/2Ao5pNf
                    # https://bit.ly/3dzir9a
                    command: |
                        currentGitBranch=$(git rev-parse --abbrev-ref HEAD)
                        if [ $currentGitBranch != "master" ]; then
                            git branch -f master origin/master;
                        fi;
            -   run:
                    name: Setup PR_NUMBER environment variable
                    command: |
                        TMP=$(echo $CIRCLE_PULL_REQUEST | rev | cut -d/ -f1 | rev)
                        echo "TMP=$TMP"
                        echo "export PR_NUMBER=$TMP" >> $BASH_ENV
                        source $BASH_ENV
            -   restore_cache:
                    keys:
                        - gradle-dependencies-v1-{{ checksum "build.gradle" }}
            -   run:
                    name: gradle-build
                    command: >
                        docker run \
                            -e SONAR_TOKEN=$SONAR_TOKEN \
                            --tty \
                            --interactive \
                            --privileged \
                            --rm \
                            --volume=${PWD}:/home/gradle/project \
                            --volume=${HOME}/.m2:/root/.m2 \
                            --volume=/var/run/docker.sock:/var/run/docker.sock \
                            --workdir=/home/gradle/project \
                            gradle:6.3-jdk11 \
                            gradle clean build sonarqube \
                                -Pversion=$CIRCLE_TAG \
                                -PpullRequestKey=$PR_NUMBER \
                                --info \
                                --console=plain
            -   run:
                    name: codecov
                    command: bash <(curl -s https://codecov.io/bash)
            -   store_test_results:
                    path: build/test-results
            -   save_cache:
                    paths:
                        - ~/.gradle
                        - ~/.m2
                    key: gradle-dependencies-v1-{{ checksum "build.gradle" }}
            -   persist_to_workspace:
                    root: .
                    paths:
                        - ./*
    build-and-push-image:
        description: Build and push image to Google Container Registry
        machine: true
        steps:
            - checkout
            -   attach_workspace:
                    at: /tmp/workspace
            -   run:
                    name: copy-artifacts-from-workspace
                    command: cp -r /tmp/workspace/build .
            - gcr/gcr-auth
            -   gcr/build-image:
                    image: backend
                    registry-url: eu.gcr.io
                    tag: $CIRCLE_TAG
            -   gcr/push-image:
                    image: backend
                    registry-url: eu.gcr.io
                    tag: $CIRCLE_TAG
            -   run:
                    name: creating-a-sentry-release
                    command: |
                        cd /tmp/workspace
                        curl -sL https://sentry.io/get-cli/ | bash
                        export SENTRY_RELEASE=$CIRCLE_TAG
                        sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
                        sentry-cli releases set-commits --auto $SENTRY_RELEASE
                        sentry-cli releases finalize $SENTRY_RELEASE
    rollout-image:
        description: Deploy application to Google Kubernetes Engine
        machine: true
        steps:
            - gke/install
            -   gke/update-kubeconfig-with-credentials:
                    cluster: standard-cluster-1
                    perform-login: true
            -   gke/rollout-image:
                    cluster: standard-cluster-1
                    container: backend
                    deployment: backend-deployment
                    image: eu.gcr.io/$GOOGLE_PROJECT_ID/backend
                    namespace: codexia-bot
                    tag: $CIRCLE_TAG
            -   run:
                    name: deploying-a-sentry-release
                    command: |
                        curl -sL https://sentry.io/get-cli/ | bash
                        export SENTRY_RELEASE=$CIRCLE_TAG
                        sentry-cli releases deploys $SENTRY_RELEASE new -e Production
workflows:
    main:
        jobs:
            - pdd
            -   build-jar:
                    filters:
                        tags:
                            only: /^\d+\.\d+\.\d+$/
#            -   build-and-push-image:
#                    requires:
#                        - build-jar
#                    filters:
#                        branches:
#                            ignore: /.*/
#                        tags:
#                            only: /^\d+\.\d+\.\d+$/
#            -   rollout-image:
#                    requires:
#                        - build-and-push-image
#                    filters:
#                        branches:
#                            ignore: /.*/
#                        tags:
#                            only: /^\d+\.\d+\.\d+$/
